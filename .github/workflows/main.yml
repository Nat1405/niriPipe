name: ci

on:
  push:

jobs:
  unit_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup conda.
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6

      - name: Create DRAGONS conda environment.
        run: |
          conda config --add channels http://ssb.stsci.edu/astroconda
          conda config --add channels http://astroconda.gemini.edu/public
          conda create -n dragons python=3.6 dragons stsci
          conda info

      - name: Run pytest, in dragons env, with coverage.
        run: |
          conda run -n dragons pip install -r dev_requirements.txt
          conda run -n dragons coverage run -m pytest .
          conda run -n dragons coverage xml -o coverage.xml

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          files: coverage.xml

  upload_to_test_pypi:
    runs-on: ubuntu-latest
    needs: unit_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python build
        run: |
          python3 -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: |
          python3 -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  deploy_container:
    runs-on: ubuntu-latest
    needs: [unit_test, upload_to_test_pypi]
    steps:
      - name: Get current datetime
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d-%H%M%S)"

      - name: Checkout Dockerfile repo
        uses: actions/checkout@v2
        with:
          repository: ijiraq/gemini_processing
          ref: niri
          path: gemini_processing

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: gemini_processing/niri/dockerfiles/arcade-niri/
          file: gemini_processing/niri/dockerfiles/arcade-niri/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/niri:0.1
          build-args: |
            TIMESTAMP=${{ steps.date.outputs.date }}

  int_test_container:
    needs: deploy_container
    runs-on: ubuntu-latest
    container:
      image: nat1405/niri:0.1
    steps:
      - name: Print niriPipe help in container
        run: |
          niriPipe --help
